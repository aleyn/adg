General Information
===================

The ADG library (Automatic Drawing Generation) is a set of functions focused
on automating the drawing of mechanical parts.

It is not a CAD system but a GObject based library providing a non-interactive
cairo canvas where you can put common CAD entities such as paths, xatches and
quotes, to create your technical drawings.

If you want to develop an application that needs to show and print drawings,
also complex, where some data change but the overall design is ever the same
the ADG library comes in handy. In production factories, this is often a good
choice and could help to greatly improve the production in technical offices.

You can reach similar targets using parametric CADs but a custom application
provides the following benefits:

o More customizable
o Quicker and not so bloated as a parametric CAD
o Can be easily connected to a database
o The drawings are generated on-fly: this feature can be used, for instance,
  in a dynamic site throught a web-based application

Installation
============

The ADG library has the following dependencies:

o glib-2.10.1 or later (http://www.gtk.org)
o gcontainer v.1.99.2 or later (http://sourceforge.net/projects/gcontainer)
o cairo-1.6 or later (http://cairographics.org)
o gtk+ v.2.8 or later (http://www.gtk.org, for the demo program)

See the file 'INSTALL' for further details.

Design
======

In one side there are the "entities", AdgEntity derived objects that define
WHAT to put in the drawing. These can be though as the widgets in Gtk+. The
entities can be grouped (using AdgContainer) in a hierarchy.

In the other side you have "contexts", one or more AdgContext instances that
specify HOW the entities must be rendered.
